// Generated by CoffeeScript 1.6.2
(function() {
  var app, async, client, config, express, port, server;

  express = require('express');

  app = express();

  server = require('http').createServer(app);

  client = require('phonegap-build-api');

  async = require('async');

  config = require('../phonegapbuildconfig');

  client.auth({
    username: config.username,
    password: config.password
  }, function(e, api) {
    return api.get('/apps', function(err, apps) {
      var refresh;

      apps = apps.apps;
      refresh = function() {
        var i, tasks, _fn, _i, _ref;

        tasks = [];
        _fn = function(app) {
          return tasks.push(function(cb) {
            var options;

            console.log("Refreshing " + app.title);
            return api.put("/apps/" + app.id + "}", options = {
              form: {
                data: {
                  pull: true
                }
              }
            }, function(e, data) {
              if (e) {
                console.log('Pull Error : ', e);
              }
              return api.post("/apps/" + app.id + "/build/", {
                form: {
                  data: {
                    platforms: ['ios']
                  }
                }
              }, function(e, data) {
                if (e) {
                  console.log(' Build Error : ', e);
                }
                return cb();
              });
            });
          });
        };
        for (i = _i = 0, _ref = apps.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          app = apps[i];
          _fn(app);
        }
        return async.series(tasks, function() {
          return console.log("Done refreshing apps on ", new Date());
        });
      };
      setInterval(function() {
        return refresh();
      }, 60000);
      return refresh();
    });
  });

  port = process.env.PORT || 3000;

  server.listen(port, function() {
    return console.log("Server running on port " + port);
  });

}).call(this);
